cmake_minimum_required(VERSION 3.1)
set(TARGET_NAME GPTParser)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")

if(APPLE)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Build/MacOSXRelease)
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Build/MacOSXRelease)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Build/MacOSXRelease)
else()
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../Build/LinuxRelease)
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../Build/LinuxRelease)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../Build/LinuxRelease)
endif()

message(STATUS "CMAKE_ARCHIVE_OUTPUT_DIRECTORY: " ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
message(STATUS "CMAKE_LIBRARY_OUTPUT_DIRECTORY: " ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
message(STATUS "CMAKE_RUNTIME_OUTPUT_DIRECTORY: " ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

file(GLOB_RECURSE SOURCES main.cpp gpt.h)
foreach(SOURCE IN LISTS SOURCES)
    message(STATUS "SOURCE - " ${SOURCE})
endforeach(SOURCE)

# include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../Inc)
# link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../Build/LinuxRelease)
add_executable(${TARGET_NAME} ${SOURCES})
# target_link_libraries(${TARGET_NAME} MBRParser)
# target_compile_options(${TARGET_NAME} PUBLIC -fPIC)